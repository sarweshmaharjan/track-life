version: "3.8"
services:
  client:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run start
    hostname: ${API_URL_CLIENT}
    container_name: tl_client
    env_file: .env
    ports: 
      - "${CLIENT_PORT}:4000"
    environment:
      - PORT=${CLIENT_PORT}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    stdin_open: true
    networks:
      - app
    volumes:
      - ./frontend:/usr/src/app/client
  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: npm run dev
    hostname: ${API_URL_SERVER}
    container_name: tl_api
    env_file: .env
    ports:
      - "${SERVER_PORT}:5000"
    environment:
      - PORT=${SERVER_PORT}
    networks:
      - app
    depends_on:
      - mongodb
    volumes:
      - ./backend:/usr/src/app/server
  mongodb:
    image: mongo
    hostname: ${API_URL_MONGO}
    container_name: tl_mongo
    ports:
      - "${DB_PORT}:27017"
    environment:
      - MONGO_INITDB_DATABASE:${DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME:${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD:${DB_PASSWORD}
    networks:
      - app
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - tl-mongo-data:/data/db
networks:
  app:
    driver: bridge
volumes:
  tl-mongo-data:
    driver: local